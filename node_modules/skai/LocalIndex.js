exports.LocalIndex = function(skai) {
	var self = this;
	
	var formsByGuid = {};
	var formsByName = {};
	
	var nodesByGuid = {};
	var nodesByName = {};
	
	skai.on("formCreated", function(form) {
		if (form instanceof Array) {
			for (var key in form) {
				self.registerForm(form[key]);
			}
		} else {
			self.registerForm(form);
		}
	});
	
	skai.on("entityCreated", function(entity) {
		if (entity instanceof Array) {
			for (var key in entity) {
				self.registerNode(entity[key]);
			}
		} else {
			self.registerNode(entity);
		}
	});
	
	skai.on("entityReceived", function(entity) {
		if (entity instanceof Array) {
			for (var key in entity) {
				self.registerNode(entity[key]);
			}
		} else {
			self.registerNode(entity);
		}
	});
	
	skai.on("formReceived", function(form) {
		self.registerForm(form);
	})
	
	skai.on("entityRemoved", function(guid) {
		self.removeNode(guid);
	});
	
	self.getAllNodes = function() {
		var nodes = [];
		for (var key in nodesByGuid) {
			nodes.push(nodesByGuid[key]);
		}
		
		return nodes;
	}
	
	self.getAllForms = function() {
		var forms = [];
		for (var key in formsByGuid) {
			forms.push(formsByGuid[key]);
		}
		
		return forms;
	}
	
	self.registerNode = function(entity) {
		
		console.log("REGISTERING A NEW NODE:" + entity.name + "[ " + entity.guid + "]");
		
		if (nodesByName[entity.name]) {
			console.log("An entity named " + entity.name + " already exists. Replacing it.");
		}
		
		if (nodesByGuid[entity.guid]) {
			console.log("An entity with this guid already exists. Overwriting it.");
		}
		
		nodesByName[entity.name] = entity;
		nodesByGuid[entity.guid] = entity;
	
		return entity;
	}
	
	self.registerForm = function(form) {
		
		console.log("REGISTERING A NEW FORM:" + form.name + "[ " + form.guid + "]");
		
		if (formsByName[form.name]) {
			console.log("A form named " + form.name + " already exists. Replacing it.");
		}
		
		if (formsByGuid[form.guid]) {
			console.log("A form with this guid already exists. Overwriting it.");
		}
		
		formsByName[form.name] = form;
		formsByGuid[form.guid] = form;

		return form;
	}
	
	self.getNodeByName = function(name) {
		return nodesByName[name];
	}
	
	self.getNodeByGuid = function(guid) {
		return nodesByGuid[guid];
	}
	
	self.getFormByName = function(name) {
		return formsByName[name];
	}
	
	self.getFormByGuid = function(guid) {
		return formsByGuid[guid];
	}
	
	self.removeNode = function(guid) {
		var node = nodesByGuid[guid];
		if (!node) {
			throw("Can't remove a node that doesn't exist.");
		} else {
			nodesByGuid[guid] = null;
			nodesByName[node.name] = null;
		}
		
		return guid;
	}

	self.listLocalNodes = function() {
		var retVal = [];
		for (var key in nodesByGuid) {
			var node = nodesByGuid[key];
			retVal.push({name: node.name, guid: node.guid});
		}
		
		return retVal;
	}
	
	self.listLocalForms = function() {
		var retVal = [];
		for (var key in formsByGuid) {
			var form = formsByGuid[key];
			retVal.push({name: form.name, guid: form.guid});
		}
		
		return retVal;
	}

	self.getValue = function(entityName, propertyName) {
		var entity = self.getNodeByName(entityName);
		if (entity) {
			return entity[propertyName];
		} else {
			throw("No entity with the name " + entityName + " seems to exist locally.");
		}
		
		
	}
	
	self.setValue = function(entityName, propertyName, value) {
		var entity = self.getNodeByName(entityName);
		if (entity) {
			entity[propertyName] = value;
		} else {
			throw("No entity with the name " + entityName + " seems to exist locally.");
		}
	}
}